.puck {
  position: relative;
  
  width: fit-content;
  height: fit-content;

  display: grid;
  place-items: center;

  transform: 
    rotateX(20deg) 
    rotateY(30deg)
    skewY(-10deg)
    ;

  transition: scale 200ms;
  transform-style: preserve-3d;
  user-select: none;

  // animation: rotationTest 6s linear infinite;

  &:hover { 
    scale: 1.1;
    cursor: pointer;
  }
}

@keyframes rotationTest {
  from {
    transform: rotateX(-20deg) rotateY(0deg);
  }
  to {
    transform: rotateX(-20deg) rotateY(360deg);
  }
}

.content {
  position: relative;
  translate: 0px 0px calc(var(--puckDepth, 30px) / 2);

  clip-path: polygon(
    0px var(--cornerSize, 10px),
    var(--cornerSize, 10px) var(--cornerSize, 10px),
    var(--cornerSize, 10px) 0px,
    calc(100% - var(--cornerSize, 10px)) 0px,
    calc(100% - var(--cornerSize, 10px)) var(--cornerSize, 10px),
    100% var(--cornerSize, 10px),
    100% calc(100% - var(--cornerSize, 10px)),
    calc(100% - var(--cornerSize, 10px)) calc(100% - var(--cornerSize, 10px)),
    calc(100% - var(--cornerSize, 10px)) 100%,
    calc(var(--cornerSize, 10px) * 2) 100%,
    calc(var(--cornerSize, 10px) * 2) calc(100% - var(--cornerSize, 10px)),
    var(--cornerSize, 10px) calc(100% - var(--cornerSize, 10px)),
    var(--cornerSize, 10px) calc(100% - var(--cornerSize, 10px) * 2),
    0px calc(100% - var(--cornerSize, 10px) * 2)
  );
}

.content::before {
  content: "";
  position: absolute;

  width: 100%;
  height: 100%;

  box-shadow: 0px 0px calc(var(--innerShadow, 10px) * 4) var(--innerShadow, 10px) black inset;
}

.face {
  position: absolute;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;
  
  clip-path: polygon(
    0px var(--cornerSize, 10px),
    var(--cornerSize, 10px) var(--cornerSize, 10px),
    var(--cornerSize, 10px) 0px,
    calc(100% - var(--cornerSize, 10px)) 0px,
    calc(100% - var(--cornerSize, 10px)) var(--cornerSize, 10px),
    100% var(--cornerSize, 10px),
    100% calc(100% - var(--cornerSize, 10px)),
    calc(100% - var(--cornerSize, 10px)) calc(100% - var(--cornerSize, 10px)),
    calc(100% - var(--cornerSize, 10px)) 100%,
    calc(var(--cornerSize, 10px) * 2) 100%,
    calc(var(--cornerSize, 10px) * 2) calc(100% - var(--cornerSize, 10px)),
    var(--cornerSize, 10px) calc(100% - var(--cornerSize, 10px)),
    var(--cornerSize, 10px) calc(100% - var(--cornerSize, 10px) * 2),
    0px calc(100% - var(--cornerSize, 10px) * 2)
  );
}

.front { translate: 0px 0px calc(var(--puckDepth, 30px) / 2); }
.back { translate: 0px 0px calc(var(--puckDepth, 30px) / -2); }

.side {
  position: absolute;

  transform-style: preserve-3d;
}

.short { 
  height: 100%;
  width: var(--puckDepth, 30px);
}

.long {
  width: 100%;
  height: var(--puckDepth, 30px);

  display: flex;
}

.left { 
  left: 0;
  rotate: y -90deg;
  translate: -50%;
}

.right { 
  right: 0;
  rotate: y 90deg;
  translate: 50%;
}

.top {
  top: 0;
  rotate: x 90deg;
  translate: 0 -50%;
}

.bottom {
  bottom: 0;
  rotate: x -90deg;
  translate: 0 50%;
}

.fragment {
  translate: 0 0 calc(-1 * var(--cornerSize, 30px) * var(--displacement, 1));
  background-color: rgba(255, 226, 99, 0.541);
}

.short > .fragment {
  width: var(--puckDepth, 30px);
  height: var(--cornerSize, 30px);
}

.long > .fragment {
  width: var(--cornerSize, 30px);
  height: var(--puckDepth, 30px);
}

.filler {
  background-color: rgba(255, 143, 64, 0.466);
}

.short > .filler {
  width: var(--puckDepth, 30px);
  height: calc(100% - var(--amountOfFragments, 1) * var(--cornerSize, 30px));
}

.long > .filler {
  height: var(--puckDepth, 30px);
  width: calc(100% - var(--amountOfFragments, 1) * var(--cornerSize, 30px));
}